<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{{ meta.name }} - Parameter Sweep</title>
    <style>
        /* Reset and base styles */
        *, *::before, *::after {
            box-sizing: border-box;
        }
        
        body {
            font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif;
            line-height: 1.5;
            margin: 0;
            padding: 0;
            color: #333;
            background-color: #f5f5f5;
        }
        
        .container {
            max-width: 1600px;
            margin: 0 auto;
            padding: 2rem 1rem;
        }
        
        header {
            margin-bottom: 2rem;
        }
        
        h1 {
            margin: 0 0 0.5rem 0;
            color: #222;
        }
        
        .meta {
            font-size: 0.9rem;
            color: #555;
            margin-bottom: 1rem;
        }
        
        .meta-item {
            margin-right: 1.5rem;
        }
        
        /* Grid styles */
        .grid-container {
            overflow-x: auto;
            background: white;
            border-radius: 8px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            padding: 1rem;
        }
        
        table {
            border-collapse: collapse;
            width: 100%;
        }
        
        th {
            text-align: left;
            padding: 0.75rem;
            font-weight: 600;
            border-bottom: 2px solid #eee;
            position: sticky;
            top: 0;
            background: white;
            z-index: 10;
        }
        
        td {
            padding: 0.5rem;
            border: 1px solid #eee;
            vertical-align: top;
        }
        
        .cell {
            display: flex;
            flex-direction: column;
            align-items: center;
            position: relative;
        }
        
        .cell-image {
            position: relative;
            width: 256px;
            height: 256px;
            overflow: hidden;
            display: flex;
            justify-content: center;
            align-items: center;
            cursor: pointer;
            background-color: #f0f0f0;
            border-radius: 4px;
        }
        
        .cell-image img {
            max-width: 100%;
            max-height: 100%;
            transition: transform 0.2s ease;
        }
        
        .cell-image:hover img {
            transform: scale(1.05);
        }
        
        .cell-image.selected {
            outline: 3px solid #007bff;
        }
        
        .cell-caption {
            font-size: 0.85rem;
            margin-top: 0.5rem;
            text-align: center;
            color: #555;
        }
        
        .cell-error {
            display: flex;
            justify-content: center;
            align-items: center;
            background-color: #f8d7da;
            color: #721c24;
            height: 100%;
            width: 100%;
            border-radius: 4px;
            padding: 1rem;
            text-align: center;
        }
        
        /* Lightbox styles */
        .lightbox {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.9);
            z-index: 1000;
            justify-content: center;
            align-items: center;
            flex-direction: column;
        }
        
        .lightbox.active {
            display: flex;
        }
        
        .lightbox-content {
            max-width: 90%;
            max-height: 80%;
            display: flex;
            position: relative;
        }
        
        .lightbox-image {
            max-width: 100%;
            max-height: 100%;
            object-fit: contain;
        }
        
        .lightbox-image-container {
            background-color: #000;
            padding: 10px;
            border-radius: 5px;
            margin-right: 20px;
        }
        
        .lightbox-info {
            background-color: rgba(255, 255, 255, 0.9);
            padding: 1rem;
            border-radius: 5px;
            max-width: 400px;
            max-height: 100%;
            overflow-y: auto;
            color: #333;
        }
        
        .lightbox-close {
            position: absolute;
            top: 20px;
            right: 20px;
            font-size: 30px;
            color: white;
            cursor: pointer;
            background: rgba(0, 0, 0, 0.5);
            width: 40px;
            height: 40px;
            display: flex;
            justify-content: center;
            align-items: center;
            border-radius: 50%;
        }
        
        /* Compare mode */
        .compare-button {
            position: fixed;
            bottom: 20px;
            right: 20px;
            background-color: #007bff;
            color: white;
            border: none;
            border-radius: 50px;
            padding: 10px 20px;
            font-size: 1rem;
            cursor: pointer;
            display: none;
            z-index: 100;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }
        
        .compare-button.visible {
            display: block;
        }
        
        .compare-container {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.9);
            z-index: 1000;
            padding: 2rem;
            overflow: auto;
        }
        
        .compare-container.active {
            display: block;
        }
        
        .compare-grid {
            display: flex;
            flex-wrap: wrap;
            justify-content: center;
            gap: 1rem;
            margin-top: 2rem;
        }
        
        .compare-item {
            display: flex;
            flex-direction: column;
            max-width: 500px;
            background-color: #fff;
            border-radius: 8px;
            overflow: hidden;
        }
        
        .compare-image {
            width: 100%;
            height: auto;
        }
        
        .compare-info {
            padding: 1rem;
            font-size: 0.9rem;
        }
        
        .compare-close {
            position: fixed;
            top: 20px;
            right: 20px;
            font-size: 30px;
            color: white;
            cursor: pointer;
            background: rgba(0, 0, 0, 0.5);
            width: 40px;
            height: 40px;
            display: flex;
            justify-content: center;
            align-items: center;
            border-radius: 50%;
            z-index: 1010;
        }
        
        /* Helper */
        pre {
            background-color: #f5f5f5;
            padding: 0.5rem;
            border-radius: 4px;
            overflow-x: auto;
            font-size: 0.85rem;
        }
    </style>
</head>
<body>
    <div class="container">
        <header>
            <h1>{{ meta.name }}</h1>
            <div class="meta">
                <span class="meta-item"><strong>Model:</strong> {{ meta.base_model }}</span>
                <span class="meta-item"><strong>Generated:</strong> {{ meta.rendered_time }}</span>
            </div>
        </header>
        
        <div class="grid-container">
            <table>
                <thead>
                    <tr>
                        <th></th>
                        {% for col_value in grid_data.col_values %}
                        <th>
                            {% if grid_data.col_param %}
                                {{ grid_data.col_param }}: {{ col_value }}
                            {% else %}
                                &nbsp;
                            {% endif %}
                        </th>
                        {% endfor %}
                    </tr>
                </thead>
                <tbody>
                    {% for row in grid_data.grid %}
                    <tr>
                        <th>{{ grid_data.row_param }}: {{ row[0].row_value }}</th>
                        
                        {% for cell in row %}
                        <td>
                            <div class="cell">
                                {% if cell.status == "succeeded" %}
                                <div class="cell-image" 
                                    data-hash="{{ cell._hash }}"
                                    data-image="{{ base_url }}/outputs/{{ cell._hash }}/output.png" 
                                    data-params="{{ cell.params|tojson }}">
                                    <img src="{{ base_url }}/outputs/{{ cell._hash }}/thumb.jpg" alt="Result">
                                </div>
                                {% else %}
                                <div class="cell-error">
                                    {{ cell.status|capitalize }}
                                    {% if cell.error %}
                                    <br>
                                    <small>{{ cell.error }}</small>
                                    {% endif %}
                                </div>
                                {% endif %}
                                
                                <div class="cell-caption">
                                    {% for param in grid_data.all_params %}
                                        {% if param != grid_data.row_param and param != grid_data.col_param and cell.params and param in cell.params %}
                                            <small>{{ param }}: {{ cell.params[param] }}</small><br>
                                        {% endif %}
                                    {% endfor %}
                                </div>
                            </div>
                        </td>
                        {% endfor %}
                    </tr>
                    {% endfor %}
                </tbody>
            </table>
        </div>
    </div>
    
    <!-- Lightbox for single image view -->
    <div class="lightbox">
        <div class="lightbox-close">&times;</div>
        <div class="lightbox-content">
            <div class="lightbox-image-container">
                <img class="lightbox-image" src="" alt="Full-size image">
            </div>
            <div class="lightbox-info">
                <h3>Parameters</h3>
                <pre class="lightbox-params"></pre>
            </div>
        </div>
    </div>
    
    <!-- Compare mode -->
    <button class="compare-button">Compare Selected (<span class="compare-count">0</span>)</button>
    
    <div class="compare-container">
        <div class="compare-close">&times;</div>
        <div class="compare-grid"></div>
    </div>
    
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Lightbox functionality
            const lightbox = document.querySelector('.lightbox');
            const lightboxImage = document.querySelector('.lightbox-image');
            const lightboxParams = document.querySelector('.lightbox-params');
            const lightboxClose = document.querySelector('.lightbox-close');
            
            // Compare functionality
            const compareButton = document.querySelector('.compare-button');
            const compareContainer = document.querySelector('.compare-container');
            const compareGrid = document.querySelector('.compare-grid');
            const compareClose = document.querySelector('.compare-close');
            const compareCount = document.querySelector('.compare-count');
            
            // Track selected images for comparison
            const selectedImages = new Set();
            
            // Handle cell click to open lightbox
            document.querySelectorAll('.cell-image').forEach(cell => {
                cell.addEventListener('click', function(event) {
                    if (event.ctrlKey || event.metaKey) {
                        // Ctrl/Cmd + click to select for comparison
                        toggleSelection(this);
                    } else {
                        // Regular click to open lightbox
                        openLightbox(this);
                    }
                });
            });
            
            // Close lightbox when clicking the close button
            lightboxClose.addEventListener('click', function() {
                lightbox.classList.remove('active');
            });
            
            // Close lightbox when clicking outside the content
            lightbox.addEventListener('click', function(event) {
                if (event.target === lightbox) {
                    lightbox.classList.remove('active');
                }
            });
            
            // Compare button click
            compareButton.addEventListener('click', function() {
                openCompareView();
            });
            
            // Close compare view
            compareClose.addEventListener('click', function() {
                compareContainer.classList.remove('active');
            });
            
            // Toggle selection for comparison
            function toggleSelection(cell) {
                const hash = cell.dataset.hash;
                
                if (selectedImages.has(hash)) {
                    // Remove from selection
                    selectedImages.delete(hash);
                    cell.classList.remove('selected');
                } else {
                    // Add to selection
                    selectedImages.add(hash);
                    cell.classList.add('selected');
                }
                
                // Update compare button
                compareCount.textContent = selectedImages.size;
                compareButton.classList.toggle('visible', selectedImages.size > 0);
            }
            
            // Open lightbox with image and parameters
            function openLightbox(cell) {
                const imageUrl = cell.dataset.image;
                const params = JSON.parse(cell.dataset.params);
                
                lightboxImage.src = imageUrl;
                lightboxParams.textContent = JSON.stringify(params, null, 2);
                lightbox.classList.add('active');
            }
            
            // Open compare view with selected images
            function openCompareView() {
                // Clear previous content
                compareGrid.innerHTML = '';
                
                // Add each selected image to the comparison grid
                document.querySelectorAll('.cell-image.selected').forEach(cell => {
                    const imageUrl = cell.dataset.image;
                    const params = JSON.parse(cell.dataset.params);
                    
                    const compareItem = document.createElement('div');
                    compareItem.className = 'compare-item';
                    
                    const compareImage = document.createElement('img');
                    compareImage.className = 'compare-image';
                    compareImage.src = imageUrl;
                    compareImage.alt = 'Comparison image';
                    
                    const compareInfo = document.createElement('div');
                    compareInfo.className = 'compare-info';
                    
                    const comparePre = document.createElement('pre');
                    comparePre.textContent = JSON.stringify(params, null, 2);
                    
                    compareInfo.appendChild(comparePre);
                    compareItem.appendChild(compareImage);
                    compareItem.appendChild(compareInfo);
                    compareGrid.appendChild(compareItem);
                });
                
                // Show the compare container
                compareContainer.classList.add('active');
            }
            
            // Keyboard shortcuts
            document.addEventListener('keydown', function(event) {
                // Escape to close lightbox or compare view
                if (event.key === 'Escape') {
                    lightbox.classList.remove('active');
                    compareContainer.classList.remove('active');
                }
                
                // Enter to open compare view if there are selections
                if (event.key === 'Enter' && selectedImages.size > 0) {
                    openCompareView();
                }
            });
        });
    </script>
</body>
</html>
